version: '3.8'

services:
  db:
    image: postgres:latest
    hostname: ${POSTGRES_HOST}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network

  app:
    image: odoo:latest
    hostname: oodo_app
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      ADMIN_PASSWORD: ${ODOO_ADMIN_PASSWORD}
    volumes:
      # - ./odoo/odoo.conf:/odoo/odoo.conf
      - ./docker-volumes/odoo_addons:/odoo/addons
    build:
      context: ~odoo/odoo_app/odoo
      dockerfile: ~odoo/odo_app/odoo/odoo.Dockerfile.dev
    networks:
      - internal_network
    depends_on:
      - db

  nginx:
    image: nginx:latest
    hostname: ${ODOO_HOST}
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx-selfsigned.crt:/etc/ssl/nginx/server.crt
      - ./nginx/nginx-selfsigned.key:/etc/ssl/nginx/server.key
      - nginx_logs:/var/log/nginx
    networks:
      - internal_network
    depends_on:
      - app
      - db

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-volumes/postgres_data

  nginx_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker-volumes/nginx_logs

networks:
  internal_network:
    driver: bridge